import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# ---------- 1. –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π ----------
RESULT_CSV1 = "nyt_2024_news_sentiment_deberta-v3-small_turbo.csv"
all_news_df = pd.read_csv(RESULT_CSV1, parse_dates=['published_date'])

# ---------- 2. –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö ----------
RESULT_CSV2 = "financial_data.csv"

def read_financial_data_with_multiindex(csv_path):
    df = pd.read_csv(csv_path)

    # –°–æ—Ö—Ä–∞–Ω–∏–º –∫–æ–ª–æ–Ω–∫—É Date –æ—Ç–¥–µ–ª—å–Ω–æ
    date_column = df['Date']

    # –¢–µ–ø–µ—Ä—å —É–¥–∞–ª–∏–º –µ—ë –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    df_rest = df.drop(columns=['Date'])

    # –†–∞—Å—â–µ–ø–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –ø–æ '.'
    new_columns = df_rest.columns.str.split('.', expand=True)
    df_rest.columns = pd.MultiIndex.from_tuples(new_columns)

    # –í–µ—Ä–Ω–µ–º Date –æ–±—Ä–∞—Ç–Ω–æ
    df_rest['Date'] = pd.to_datetime(date_column)
    df_rest = df_rest.set_index('Date')
    
    return df_rest

# –ß—Ç–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
financial_data = read_financial_data_with_multiindex(RESULT_CSV2)

# ---------- 3. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö ----------

# –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞–∂–¥–æ–º—É –¥–Ω—é –∏ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
daily_sentiment = all_news_df.groupby(['published_date', 'sentiment']).size().unstack(fill_value=0).reset_index()

# –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Ü–µ–Ω—É –æ—Ç–∫—Ä—ã—Ç–∏—è (Open) –≤—Å–µ—Ö —Ç–∏–∫–µ—Ä–æ–≤
open_data = financial_data.xs('Open', axis=1, level=1)

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∏–Ω–¥–µ–∫—Å ‚Äî —ç—Ç–æ –¥–∞—Ç–∞
open_data.index = pd.to_datetime(open_data.index)

# –°–±—Ä–æ—Å–∏–º –∏–Ω–¥–µ–∫—Å, —á—Ç–æ–±—ã –¥–∞—Ç–∞ —Å—Ç–∞–ª–∞ –æ–±—ã—á–Ω–æ–π –∫–æ–ª–æ–Ω–∫–æ–π
open_data = open_data.reset_index()

# ---------- 4. –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ –¥–∞—Ç–µ ----------
# –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–µ
merged_data = pd.merge(daily_sentiment, open_data, left_on='published_date', right_on='Date', how='inner')

# –£–±–∏—Ä–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ —Å –¥–∞—Ç–∞–º–∏ –ø–µ—Ä–µ–¥ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–µ–π
features_for_corr = merged_data.drop(columns=['published_date', 'Date'])

# ---------- 5. –û—á–∏—Å—Ç–∫–∞ –≤—ã—Å–æ–∫–æ –∫–æ—Ä—Ä–µ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ) ----------
def remove_highly_correlated_features(corr_matrix, threshold=0.95):
    # –ù–∞—Ö–æ–¥–∏–º –ø–∞—Ä—ã –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–µ–π –≤—ã—à–µ threshold
    correlated_pairs = set()
    for i in range(corr_matrix.shape[0]):
        for j in range(i):
            if abs(corr_matrix.iloc[i, j]) > threshold:
                colname1 = corr_matrix.columns[i]
                colname2 = corr_matrix.columns[j]
                correlated_pairs.add(colname1)
    return list(correlated_pairs)

# –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–æ–Ω–Ω—É—é –º–∞—Ç—Ä–∏—Ü—É
correlation_matrix = features_for_corr.corr()

# –£–±–∏—Ä–∞–µ–º –≤—ã—Å–æ–∫–æ –∫–æ—Ä—Ä–µ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
high_corr_features = remove_highly_correlated_features(correlation_matrix, threshold=0.95)

if high_corr_features:
    print(f"‚ö° –£–¥–∞–ª—è–µ–º –≤—ã—Å–æ–∫–æ –∫–æ—Ä—Ä–µ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏: {high_corr_features}")
    features_for_corr = features_for_corr.drop(columns=high_corr_features)
    correlation_matrix = features_for_corr.corr()

# ---------- 6. –¢–û–ü-10 —Å–∞–º—ã—Ö —Å–∏–ª—å–Ω—ã—Ö –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π ----------
corr_pairs = correlation_matrix.unstack().reset_index()
corr_pairs.columns = ['Feature1', 'Feature2', 'Correlation']

# –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã (–≥–¥–µ Feature1 == Feature2 –∏ –∑–µ—Ä–∫–∞–ª—å–Ω—ã–µ –ø–∞—Ä—ã)
corr_pairs = corr_pairs[corr_pairs['Feature1'] != corr_pairs['Feature2']]
corr_pairs['AbsCorrelation'] = corr_pairs['Correlation'].abs()
corr_pairs = corr_pairs.sort_values(by='AbsCorrelation', ascending=False).drop_duplicates(subset=['AbsCorrelation'])

# –ü–µ—á–∞—Ç–∞–µ–º –¢–û–ü-10 –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π
print("\nüî• –¢–û–ü-10 —Å–∞–º—ã—Ö —Å–∏–ª—å–Ω—ã—Ö –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–π:")
print(corr_pairs.head(10)[['Feature1', 'Feature2', 'Correlation']])

# ---------- 7. –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è ----------
plt.figure(figsize=(16,12))
sns.heatmap(correlation_matrix, annot=True, cmap="coolwarm", fmt=".2f", linewidths=0.5)
plt.title("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –Ω–æ–≤–æ—Å—Ç–µ–π –∏ —Ü–µ–Ω–∞–º–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –∞–∫—Ü–∏–π –ø–æ –¥–Ω—è–º", fontsize=16)
plt.xticks(rotation=45, ha='right')
plt.yticks(rotation=0)
plt.tight_layout()
plt.savefig('correlation_map.png')
plt.show()

print("‚úÖ Heatmap —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ 'correlation_map.png'.")
